---
import {
  House,
  BriefcaseBusiness,
  BookOpenCheck,
  Heart,
  ArrowLeft,
  ArrowRight,
} from "lucide-react";
import { generateAllPaths } from "@/lib/dynamicNavigationUtils";

const currentPath = Astro.url.pathname;

const links = [
  {
    href: "/",
    icon: House,
    color:
      "bg-[radial-gradient(circle_at_center,_var(--tw-gradient-stops))] from-yellow-500 animate-pulse duration-2000 via-yellow-900 blur-sm",
  },
  {
    href: "/experiences",
    icon: BriefcaseBusiness,
    color:
      "bg-[radial-gradient(circle_at_center,_var(--tw-gradient-stops))] from-indigo-500 via-indigo-900 animate-pulse duration-2000 blur-sm ",
  },
  {
    href: "/education",
    icon: BookOpenCheck,
    color:
      "bg-[radial-gradient(circle_at_center,_var(--tw-gradient-stops))] from-orange-500 via-orange-900 animate-pulse duration-2000 blur-sm ",
  },
  {
    href: "/interests",
    icon: Heart,
    color:
      "bg-[radial-gradient(circle_at_center,_var(--tw-gradient-stops))] from-emerald-500 via-emerald-900 animate-pulse duration-2000 blur-sm",
  },
];

const isActive = (href: string, index: number) => {
  if (index === 0) {
    return currentPath === href;
  }
  return currentPath.includes(href);
};

// Navigation buttons logic
const allPaths = generateAllPaths();
const currentIndex = allPaths.indexOf(currentPath);
const prevPath = currentIndex > 0 ? allPaths[currentIndex - 1] : null;
const nextPath =
  currentIndex < allPaths.length - 1 ? allPaths[currentIndex + 1] : null;
---

<nav class="md:flex-col justify-center md:pl-8 flex" transition:name="menu">
  {
    links.map((link, index) => (
      <a
        href={link.href}
        class="mb-8 w-min rounded-full p-2 relative cursor-pointer"
        transition:name={link.href}
      >
        {isActive(link.href, index) && (
          <div
            class="absolute inset-0  border-primary/60 rounded-full "
            transition:name={`active-page`}
          >
            <div class={`absolute inset-1 ${link.color} rounded-full `} />
          </div>
        )}
        <link.icon
          className={`h-5 w-5 relative z-10 text-primary `}
          strokeWidth={1}
        />
      </a>
    ))
  }

  <!-- Navigation buttons -->
  <div class="flex flex-col md:mt-8">
    {
      prevPath && (
        <a
          href={prevPath}
          class="mb-4 w-min rounded-full p-2 relative cursor-pointer text-primary hover:text-primary/80 transition-colors"
          title="Previous Page"
        >
          <ArrowLeft className="h-5 w-5 relative z-10" strokeWidth={1} />
        </a>
      )
    }
    {
      nextPath && (
        <a
          href={nextPath}
          class="w-min rounded-full p-2 relative cursor-pointer text-primary hover:text-primary/80 transition-colors"
          title="Next Page"
        >
          <ArrowRight className="h-5 w-5 relative z-10" strokeWidth={1} />
        </a>
      )
    }
  </div>
</nav>
